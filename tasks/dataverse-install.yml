---
# dataverse/tasks/dataverse-install.yml

# version numbers changed on github. only used this because files were missing from install.zip
#- name: clone {{ dataverse.version }} from git. optimally replace install.zip with this.
#  git: repo=git://github.com/IQSS/dataverse.git dest=/tmp/dataverse_{{ dataverse.version }} version={{ dataverse.version }}
#       clone=yes depth=1 accept_hostkey=true

- name: download dataverse installer
  get_url:
    url: https://github.com/IQSS/dataverse/releases/download/v{{ dataverse.version }}/dvinstall.zip
    dest: /tmp
# checksum: sha1:7ef1fb48956cfd509e55488f2908e9a4ae923a45 
# requires ansible â‰¥2.0

- name: unzip dataverse installer
  unarchive:
    src: /tmp/dvinstall.zip
    remote_src: true
    dest: /tmp
    
- name: fix perms on dataverse-war
  file: path=/tmp/dvinstall/dataverse.war mode=0644


- name: install jdbc driver
  shell: "/bin/cp /tmp/dvinstall/pgdriver/postgresql-9.1-902.jdbc4.jar {{ dataverse.glassfish.root }}/glassfish/lib/"

#  20180713jmj   added to copy the war file to glassfish applications directory
- name: copy war file to glassfish applications directory
  shell: "/bin/cp /tmp/dvinstall/dataverse.war {{ dataverse.glassfish.root }}/glassfish//domains/domain1/applications/dataverse.war"
  

- name: copy jhove config
  copy: src=jhove.conf dest={{ dataverse.glassfish.root }}/domains/glassfish/{{ dataverse.glassfish.domain }}/config/ owner=root group=root mode=0644

- name: run glassfish-setup.sh
  shell: "cd /tmp/dvinstall && nohup ./glassfish-setup.sh > /tmp/glassfish-setup.out 2>&1"
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  environment:
    HOST_ADDRESS: "{{ dataverse.service_name }}"
    GLASSFISH_ROOT: "{{ dataverse.glassfish.root }}"
    GLASSFISH_DOMAIN: "{{ dataverse.glassfish.domain }}"
    FILES_DIR: "{{ dataverse.filesdir }}"
    DB_NAME: "{{ dataverse.db }}"
    DB_PORT: "{{ dataverse.dbport }}"
    DB_HOST: "{{ dataverse.dbhost }}"
    DB_USER: "{{ dataverse.dbuser }}"
    DB_PASS: "{{ dataverse.dbpass }}"
    RSERVE_HOST: "{{ rserve.host }}"
    RSERVE_PORT: "{{ rserve.port }}"
    RSERVE_USER: "{{ rserve.user }}"
    RSERVE_PASS: "{{ rserve.pass }}"
    SMTP_SERVER: "{{ dataverse.smtp }}"
    MEM_HEAP_SIZE: "{{ dataverse.memheap }}"

- name: set logging format
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
  shell: "{{ dataverse.glassfish.root }}/bin/asadmin set-log-file-format {{ dataverse.glassfish.logformat }}"

- name: try restarting before deploy
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
 # try restart rather than start
  shell: "nohup {{ dataverse.glassfish.root }}/bin/asadmin restart-domain"
  when: ansible_os_family == "RedHat" and
        ansible_distribution_major_version == "7"
        
- name: deploy dataverse.war
  become: yes
  become_user: "{{ dataverse.glassfish.user }}"
# 20180713jmj  changed the line to look in the glassfish applications directory for the war file
#  shell: "nohup {{ dataverse.glassfish.root }}/bin/asadmin deploy /tmp/dvinstall/dataverse.war"
  shell: "nohup {{ dataverse.glassfish.root }}/bin/asadmin deploy {{ dataverse.glassfish.root }}/glassfish/domains/domain1/applications/dataverse.war"
